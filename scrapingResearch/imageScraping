from bs4 import BeautifulSoup
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import logging

logging.basicConfig(level=logging.INFO)
log = logging.getLogger(__name__)

class BatteryScraper:
    BASE_URL = 'https://doi.org/10.3390/en11051073'

    def __init__(self):
        pass

    def fetch_images_with_selenium(self):
        log.info('Fetching images using Selenium...')
        driver = webdriver.Chrome()  # Use appropriate webdriver for your browser
        try:
            driver.get(self.BASE_URL)
            # Wait for images to load (adjust timeout as needed)
            WebDriverWait(driver, 10).until(
                EC.presence_of_all_elements_located((By.CLASS_NAME, 'src'))
            )
            soup = BeautifulSoup(driver.page_source, 'html.parser')
            images = self.extract_images(soup)
            log.info(f'Successfully extracted {len(images)} images using Selenium.')
            for image in images:
                print(image)  # Print or save the image URLs
        finally:
            driver.quit()

    def extract_images(self, soup):
        images = []
        figure_elements = soup.find_all('figure', class_='src')
        for figure in figure_elements:
            img = figure.find('img')
            if img and 'src' in img.attrs:
                images.append(img['src'])
        return images

    def run(self):
        self.fetch_images_with_selenium()

def main():
    scraper = BatteryScraper()
    scraper.run()

if __name__ == "__main__":
    main()
